{"payload":"","payloadType":"https://witness.testifysec.com/policy/v0.1","signatures":[{"keyid":"a0e98f1869e6730b02f80dc5d2ddd7149d0dcba3ecb2f4cbf1aeaa6ef8bb069d","sig":"Nrx84H+OK7kcBsTrOA72v2nVU9ryLvXFSCACKmOohLn1DALM+FUTiHkJM7oaPdJ0CFlUNIfPCWO7Lj8E43zQvmvNiDULxjwIANJ0R5NlD5CCtwozq7aHRNdvNCLJKMznVa2yI0dsodmvslMckYY1QbASlyNf1TM9h21LQQZfnQ5RFscQ0p8ulI1+cZHpyK6znLZpAYq/y3BkaYFwt1+Y9en/KELbrecgNkD4ri9u1SWYOzRm07pg9skQk5jl969zdO+fpZDcfdGImX/26m512su2qjplNHlHKkUllVHfU26lgnmNSr8oZsGoCTfOOJZLnZzBk0hRZ4jTZO2uSdQy6g=="}]}
