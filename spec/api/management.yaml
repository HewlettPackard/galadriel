openapi: 3.0.0
info:
  title: SPIRE Bridge - Galadriel Server API
  description: Set of APIs to be used by Galadriel administrations to define and configure the bridge, members, and relationships
  version: 1.0.0

servers:
  - url: http://localhost:32208/

components:
  schemas:
    # The goal of SPIRE Bridge - Galadriel is to store and move trust bundles around 
    # There is no way to update trust bundles, they are only created or deleted
    # Deletion is normally automatic (not through API) when the trust bundle contents
    # indicate that it has expired

    Organization:
      # An organization is the building block to create Federation Groups. It provides multitenancy capabilities.
      type: object
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
          format: string
      required:
        - id
        - name
    FederationGroup:
      # A Federation Group is a group of SpireServers (representation of the bridge)
      type: object
      properties:
        id:
          type: integer
          format: int64
        orgid:
          type: integer
          format: int64
        name:
          type: string
          format: string
        status:
          type: string
          format: string
          enum:
            - inactive
            - active
      required:
        - id
        - orgid
        - name
    SpireServer:
      # SpireServer is a representation of a trust-domain/SpireServer 
      type: object
      properties:
        id:
          type: integer
          format: int64
        trustDomain:
          type: string
          format: string
        description:
          type: string
          format: string
        status:
          type: string
          enum:
            - invited
            - active
            - inactive
      required:
        - id
        - trustdomain
        - description
        - status
    FederationGroupMembership:
      # A FederationGroupMembership reperesents a particular SPIRE server's presence in a 
      # FederationGroup
      type: object
      properties:
        id:
          type: integer
          format: int64
        spireServerId:
          type: integer
          format: int64
        federationGroupId:
          type: integer
          format: int64
        status:
          type: string
          enum:
            - active
            - inactive
      required:
        - spireServerId
        - federationGroupId
        - status
    
paths:
  /organizations:
    post:
      description: Create a new organization
      operationId: createOrganization
      requestBody:
        description: Elements of the organization to add
        required: true 
        content:
          application/jason:
            schema:
              $ref: '#/components/schemas/Organization'
      responses:
        '201': 
          description: Organization creation response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Organization'
        default:
          description: unexpected error 
          content:
            application/json:
              schema:
                $ref: './schemas.yaml'
    get:
      description: Returns all Organizations
      operationId: getOrganizations
      parameters:
        - name: name
          in: query
          description: filter organizations by name
          schema:
            type: string
            format: string
      responses:
        '200':
          description: get organization's response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Organization'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: './schemas.yaml'
  /organizations/{orgID}:
    get: 
      description: get data for one organization
      operationId: getOrgbyID
      parameters:
        - name: orgID
          in: path
          description: Id of the organization to be retrieved
          required: true 
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: get organization's response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Organization'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: './schemas.yaml'  
    put:
      description: update an organizaion by ID
      operationId: updateOrganizaion
      parameters:
        - name: orgID
          in: path
          description: Id of the organization to update
          required: true
          schema: 
            type: integer
            format: int64
      requestBody:
        description: contents of the org to be updated
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Organization'
      responses:
        '204':
          description: no content
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: './schemas.yaml'
    delete:
      description: delete an organization
      operationId: deleteOrganization
      parameters:
        - name: orgID
          in: path
          description: Id of the organization to delete
          required: true
          schema: 
            type: integer
            format: int64
      responses:
        '204':
          description: no content
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: './schemas.yaml'
  /federationGroups:
    post:
      description: Create a new federation group
      operationId: createFederationGroup
      requestBody:
        description: Elements of the federation group to add
        required: true 
        content:
          application/jason:
            schema:
              $ref: '#/components/schemas/FederationGroup'
      responses:
        '201': 
          description: Federation Group creation response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FederationGroup'
        default:
          description: unexpected error 
          content:
            application/json:
              schema:
                $ref: './schemas.yaml'
    get:
      description: Returns all federation groups
      operationId: getFederationGroups
      parameters:
        - name: orgId
          in: query
          description: filter federation groups by orgId
          schema:
            type: string
            format: int64
        - name: orgname
          in: query
          description: filter federation groups by orgname
          schema:
            type: string
            format: string
        - name: name
          in: query
          description: filter organizations by federation group name
          schema:
            type: string
            format: string
      responses:
        '200':
          description: get FederationGroup's response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/FederationGroup'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: './schemas.yaml'
  /federationGroups/{federationGroupID}:
    get: 
      description: get data for one FederationGroup
      operationId: getFederationGroupbyID
      parameters:
        - name: federationGroupID
          in: path
          description: Id of the federationGroup to be retrieved
          required: true 
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: get federationGroup ID's response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FederationGroup'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: './schemas.yaml'  
    put:
      description: update a federationGroup by ID
      operationId: updatefederationGroup
      parameters:
        - name: federationGroupID
          in: path
          description: Id of the federationGroup to update
          required: true
          schema: 
            type: integer
            format: int64
      requestBody:
        description: contents of the federationGroup to be updated
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/FederationGroup'
      responses:
        '204':
          description: no content
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: './schemas.yaml'
    delete:
      description: delete a federationGroup
      operationId: deletefederationGroup
      parameters:
        - name: federationGroupID
          in: path
          description: Id of the federationGroup to delete
          required: true
          schema: 
            type: integer
            format: int64
      responses:
        '204':
          description: no content
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: './schemas.yaml'

  /spireServers:
    post:
      description: Create a new SpireServer
      operationId: createSpireServer
      requestBody:
        description: Elements of SPIRE server to add
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SpireServer'
      responses:
        '201': 
          description: SpireServer creation response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SpireServer'
        default:
          description: unexpected error 
          content:
            application/json:
              schema:
                $ref: './schemas.yaml'
    get:
      description: Returns all the SpireServers 
      operationId: getSpireServers
      parameters:
        - name: trustDomain
          in: query
          description: filter SpireServers by trust domain
          schema:
            type: string
            format: string
        - name: status
          in: query
          description: filter SpireServers by status
          schema:
            type: string
            enum:
              - invited
              - inactive
              - active
      responses:
        '200':
          description: get SpireServers's response 
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/SpireServer'
        default:
          description: unexpected Error
          content:
            application/json:
              schema:
                $ref: './schemas.yaml'

  /spireServers/{spireServerId}:
    put:
      description: Updates the status of a SpireServer
      operationId: updateSpireServer
      parameters:
        - name: spireServerId
          in: path 
          description: Id of the SPIRE server to update 
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        description: contents of the SPIRE server to update
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/SpireServer'
      responses:
        '200':
          description: get SpireServers's response 
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SpireServer'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: './schemas.yaml'
    delete:
      description: delete a SpireServer
      operationId: deleteSpireServer
      parameters:
        - name: spireServerId
          in: path
          description: Id of the SPIRE server to delete
          required: true
          schema: 
            type: integer
            format: int64
      responses:
        '204':
          description: no content
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: './schemas.yaml'
  /federationGroupMemberships:
    post:
      description: Associate a SpireServer to a Federation Group
      operationId: createFederationGroupMembership
      requestBody:
        description: Elements of the federation group membership to add
        required: true 
        content:
          application/jason:
            schema:
              $ref: '#/components/schemas/FederationGroupMembership'
      responses:
        '201': 
          description: Federation Group membership creation response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FederationGroupMembership'
        default:
          description: unexpected error 
          content:
            application/json:
              schema:
                $ref: './schemas.yaml'
    get:
      description: Returns all federation groups memberships
      operationId: getFederationGroupMemberships
      parameters:
        - name: orgId
          in: query
          description: filter federation groups memberships by orgId
          schema:
            type: string
            format: int64
        - name: orgname
          in: query
          description: filter federation groups memberships by orgname
          schema:
            type: string
            format: string
        - name: trustDomain
          in: query
          description: filter memberships by trust domain (SpireSever)
          schema:
            type: string
            format: string
        - name: status
          in: query
          description: filter memberships by status
          schema:
            type: string
            enum:
              - inactive
              - active
      responses:
        '200':
          description: get FederationGroup memebership's response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/FederationGroupMembership'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: './schemas.yaml'
  /federationGroupMemberships/{membershipID}:
    get: 
      description: get data for one FederationGroup
      operationId: getFederationGroupMembershipbyID
      parameters:
        - name: membershipID
          in: path
          description: Id of the federationGroup to be retrieved
          required: true 
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: get federationGroup ID's response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FederationGroup'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: './schemas.yaml'  
    put:
      description: update a federationGroupMembership by ID
      operationId: updatefederationGroupMembership
      parameters:
        - name: membershipID
          in: path
          description: Id of the federationGroup membership to update
          required: true
          schema: 
            type: integer
            format: int64
      requestBody:
        description: contents of the federationGroup membership to be updated
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/FederationGroupMembership'
      responses:
        '204':
          description: no content
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: './schemas.yaml'
    delete:
      description: delete a federationGroup membership
      operationId: deletefederationGroupMembership
      parameters:
        - name: membershipID
          in: path
          description: Id of the federationGroup membership to delete
          required: true
          schema: 
            type: integer
            format: int64
      responses:
        '204':
          description: no content
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: './schemas.yaml'
  /federationRelationships:
    post:
      description: Creates inital request for trustbundle exchange between two SpireServers active in the same federation group
      operationId: createFederationRelationship
      requestBody:
        description: Elements of the federation relationship to add
        required: true 
        content:
          application/jason:
            schema:
              $ref: './schemas.yaml'
      responses:
        '201': 
          description: Federation relationship creation response
          content:
            application/json:
              schema:
                $ref: './schemas.yaml'
        default:
          description: unexpected error 
          content:
            application/json:
              schema:
                $ref: './schemas.yaml'
    get:
      description: Returns all federation relationships
      operationId: getFederationRelationships
      parameters:
        - name: orgId
          in: query
          description: filter federation groups memberships by orgId
          schema:
            type: string
            format: int64
        - name: orgname
          in: query
          description: filter federation groups memberships by orgname
          schema:
            type: string
            format: string
        - name: trustDomain
          in: query
          description: filter memberships by trust domain (SpireSever)
          schema:
            type: string
            format: string
        - name: status
          in: query
          description: filter memberships by status
          schema:
            type: string
            enum:
              - inactive
              - active
              - invited
      responses:
        '200':
          description: get Federation relationship's response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: './schemas.yaml'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: './schemas.yaml'
  /federationRelationships/{relationshipID}:
    get: 
      description: get data for one FederationGroup
      operationId: getFederationRelationshipbyID
      parameters:
        - name: relationshipID
          in: path
          description: Id of the federationGroup to be retrieved
          required: true 
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: get federationGroup ID's response
          content:
            application/json:
              schema:
                $ref: './schemas.yaml'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: './schemas.yaml'  
    put:
      description: update a federationGroupMembership by ID
      operationId: updateFederationRelationshipship
      parameters:
        - name: relationshipID
          in: path
          description: Id of the federation relationship to update
          required: true
          schema: 
            type: integer
            format: int64
      requestBody:
        description: contents of the federationGroup membership to be updated
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: './schemas.yaml'
      responses:
        '204':
          description: no content
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: './schemas.yaml'

  /trustBundles/{trustBundleId}:
    put:
      description: Upload a TrustBundle
      operationId: updateTrustBundle
      parameters:
        - name: trustBundleId
          in: path 
          description: Id of the trust bundle to update 
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        description: contents of the trust bundle to update
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: './schemas.yaml'
      responses:
          '200':
            description: get trust bundle's response 
            content:
              application/json:
                schema:
                  $ref: './schemas.yaml'
          default:
            description: unexpected error
            content:
              application/json:
                schema:
                  $ref: './schemas.yaml'

