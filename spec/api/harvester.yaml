openapi: 3.0.0
info:
  title: SPIRE Bridge - Galadriel Harverster API
  description: API to be used for interacting with Harvesters. 
  version: 1.0.0

servers:
  - url: http://localhost:32308/

paths:
  /federation-relationships:
    get:
      description: Returns all federated relationships of a SPIRE server in the Galadriel server
      operationId: getFederationRelationships
      parameters:
        - name: spireServerID
          in: query
          description: filter relationships by spireServerID
          schema:
            type: string
            format: string
        - name: status
          in: query
          description: filter relationships by status
          schema:
            type: string
            format: string
        - name: federationGroupID
          in: query
          description: filter relationships by federationGroupID
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: get relationships's response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: './schemas.yaml'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: './schemas.yaml'

  /federation-relationships/{relationshipID}:
    get: 
      description: get data for one federation relationship
      operationId: getFederationRelationshipByID
      parameters:
        - name: relationshipID
          in: path
          description: ID of the relationship to be retrieved
          required: true 
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: get relationship's response
          content:
            application/json:
              schema:
                $ref: './schemas.yaml'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: './schemas.yaml'
    put:
      description: updates the consent of a relationship by ID
      operationId: updateFederatedRelationshipConsent
      parameters:
        - name: relationshipID
          in: path
          description: ID of the relationship to update
          required: true
          schema: 
            type: integer
            format: int64
      requestBody:
        description: content of the relationship to be updated
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: './schemas.yaml'
      responses:
        '204':
          description: no content
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: './schemas.yaml'

  # /trust-bundles/{trustBundleId}:
  #   put:
  #     description: Upload a TrustBundle
  #     operationId: updateTrustBundle
  #     parameters:
  #       - name: trustBundleId
  #         in: path 
  #         description: Id of the trust bundle to update 
  #         required: true
  #         schema:
  #           type: integer
  #           format: int64
  #     requestBody:
  #       description: contents of the trust bundle to update
  #       content:
  #         application/x-www-form-urlencoded:
  #           schema:
  #             $ref: './schemas.yaml'
  #     responses:
  #         '200':
  #           description: get trust bundle's response 
  #           content:
  #             application/json:
  #               schema:
  #                 $ref: './schemas.yaml'
  #         default:
  #           description: unexpected error
  #           content:
  #             application/json:
  #               schema:
  #                 $ref: './schemas.yaml'