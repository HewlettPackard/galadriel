name: release

on:
  push:
    # run only against tags
    tags: ['v[0-9].[0-9]+.[0-9]+']

permissions:  # added using https://github.com/step-security/secure-workflows
  contents: read

jobs:

  goreleaser:
    runs-on: ubuntu-22.04

    permissions:
      contents: write  # for goreleaser/goreleaser-action to create a GitHub release
    
    outputs:  
      hashes: ${{ steps.hash.outputs.hashes }}

    steps:
      
      - name: Harden Runner
        uses: step-security/harden-runner@18bf8ad2ca49c14cbb28b91346d626ccfb00c518 # v2.1.0
        with:
          egress-policy: audit # TODO: change to 'egress-policy: block' after couple of runs
      
      - name: Download syft
        uses: anchore/sbom-action/download-syft@06e109483e6aa305a2b2395eabae554e51530e1d # v0.13.1

      - name: Checkout
        uses: actions/checkout@ac593985615ec2ede58e132d2e21d2b1cbd6127c # v3.3.0
        with:
          fetch-depth: 0

      - name: Set up Go
        uses: actions/setup-go@6edd4406fa81c3da01a34fa6f6343087c207a568 # v3.5.0
        with:
          go-version: '1.19'
          cache: true

      - name: Import GPG key
        id: import_gpg
        uses: crazy-max/ghaction-import-gpg@111c56156bcc6918c056dbef52164cfa583dc549 # v5.2.0
        with:
          gpg_private_key: ${{ secrets.GPG_PRIVATE_KEY }}
          passphrase: ${{ secrets.PASSPHRASE }}
      
      - name: Download GoReleaser
        run: go install github.com/goreleaser/goreleaser@latest

      - name: Run GoReleaser
        uses: testifysec/witness-run-action@v0.1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          GPG_FINGERPRINT: ${{ steps.import_gpg.outputs.fingerprint }}
        with:
          enable-sigstore: true
          enable-archivista: true
          step: "build"
          command: goreleaser release --rm-dist

      - name: Generate subject
        id: hash
        env:
          ARTIFACTS: "${{ steps.run-goreleaser.outputs.artifacts }}"
        run: ./.github/workflows/scripts/getHashes.sh
        shell: bash

  provenance:
    needs: [goreleaser]
    permissions:
      actions: read # To read the workflow path.
      id-token: write # To sign the provenance.
      contents: write # To add assets to a release.
    uses: slsa-framework/slsa-github-generator/.github/workflows/generator_generic_slsa3.yml@v1.4.0 # 68bad40844440577b33778c9f29077a3388838e9
    with:
      base64-subjects: "${{ needs.goreleaser.outputs.hashes }}"
      upload-assets: true # upload to a new release
