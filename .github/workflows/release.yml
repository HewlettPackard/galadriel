permissions:
  id-token: write # This is required for requesting the JWT
  contents: read  # This is required for actions/checkout

name: release

on:
  push:
    branches:
      - cole/witness


jobs:

  release-binaries:
    runs-on: "ubuntu-22.04"
    
    # outputs:  
    #   hashes: ${{ steps.hash.outputs.hashes }}

    steps:
      
      # - name: Harden Runner
      #   uses: step-security/harden-runner@18bf8ad2ca49c14cbb28b91346d626ccfb00c518 # v2.1.0
      #   with:
      #     egress-policy: audit # TODO: change to 'egress-policy: block' after couple of runs
      
      - name: Download syft
        uses: anchore/sbom-action/download-syft@06e109483e6aa305a2b2395eabae554e51530e1d # v0.13.1

      - name: Checkout
        uses: actions/checkout@ac593985615ec2ede58e132d2e21d2b1cbd6127c # v3.3.0
        with:
          fetch-depth: 0

      - name: Set up Go
        uses: actions/setup-go@6edd4406fa81c3da01a34fa6f6343087c207a568 # v3.5.0
        with:
          go-version: '1.19'
          cache: true

      # - name: Import GPG key
      #   id: import_gpg
      #   uses: crazy-max/ghaction-import-gpg@111c56156bcc6918c056dbef52164cfa583dc549 # v5.2.0
      #   with:
      #     gpg_private_key: ${{ secrets.GPG_PRIVATE_KEY }}
      #     passphrase: ${{ secrets.PASSPHRASE }}
      
      - name: Download GoReleaser
        run: go install github.com/goreleaser/goreleaser@v1.17.1

      - name: Run GoReleaser
        uses: testifysec/witness-run-action@v0.1.1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          GITHUB_REPOSITORY_OWNER: ${{ github.repository_owner }}
        with:
          enable-sigstore: true
          enable-archivista: true
          trace: false
          step: "build"
          command: goreleaser release --clean --snapshot

      - name: "Upload artifact"
        uses: actions/upload-artifact@0b7f8abb1508181956e8e162db84b466c27e18ce # v3.1.2
        with:
          name: binaries
          path: dist/
          retention-days: 5

  release-docker:
    runs-on: "ubuntu-22.04"
    
    # outputs:  
    #   hashes: ${{ steps.hash.outputs.hashes }}
    
    steps:

      - name: Checkout
        uses: actions/checkout@ac593985615ec2ede58e132d2e21d2b1cbd6127c # v3.3.0
        with:
          fetch-depth: 0


      - name: Setup KO
        uses: imjasonh/setup-ko@v0.6
        env:
          KO_DOCKER_REPO: ghcr.io/github.com/testifysec/galadriel
      - name: Login to GHCR
        env:
          AUTH_TOKEN: ${{ secrets.AUTH_TOKEN }}
        run: |
          echo "${AUTH_TOKEN}" | ko login ghcr.io --username dummy --password-stdin

      - name: Build Server
        uses: testifysec/witness-run-action@fix-output
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          GITHUB_REPOSITORY_OWNER: ${{ github.repository_owner }}
          KO_DOCKER_REPO: ghcr.io/github.com/testifysec/galadriel
        with:
          enable-sigstore: true
          enable-archivista: true
          trace: false
          step: "build"
          attestations: "git github oci"
          command: ko build --tarball server.tar --sbom-dir . ./cmd/server

      - name: Build Harvestor
        uses: testifysec/witness-run-action@main
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          GITHUB_REPOSITORY_OWNER: ${{ github.repository_owner }}
          KO_DOCKER_REPO: ghcr.io/github.com/testifysec/galadriel
          
        with:
          enable-sigstore: true
          enable-archivista: true
          trace: false
          step: "build"
          attestations: "environment git github oci"
          command: ko build --tarball harestor.tar --sbom-dir . ./cmd/harvester

  #     - name: Generate subject
  #       id: hash
  #       env:
  #         ARTIFACTS: "${{ steps.run-goreleaser.outputs.artifacts }}"
  #       run: ./.github/workflows/scripts/getHashes.sh
  #       shell: bash

        

  # provenance:
  #   needs: [goreleaser]
  #   permissions:
  #     actions: read # To read the workflow path.
  #     id-token: write # To sign the provenance.
  #     contents: write # To add assets to a release.
  #   uses: slsa-framework/slsa-github-generator/.github/workflows/generator_generic_slsa3.yml@v1.4.0 # 68bad40844440577b33778c9f29077a3388838e9
  #   with:
  #     base64-subjects: "${{ needs.goreleaser.outputs.hashes }}"
  #     upload-assets: true # upload to a new release
