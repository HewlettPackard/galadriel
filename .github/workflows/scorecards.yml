name: Scorecards supply-chain security
on:
  # Only the default branch is supported.
  branch_protection_rule:
  schedule:
    - cron: '0 8 * * *'
  pull_request: {}
  push:
    branches: [ "main" ]

# Declare default permissions as read only.
permissions: read-all

jobs:
  analysis:
    name: Scorecards analysis
    runs-on: ubuntu-22.04
    permissions:
      # Needed to upload the results to code-scanning dashboard.
      security-events: write
      # Used to receive a badge. (Upcoming feature)
      id-token: write
      # Needs for private repositories.
      contents: read
      actions: read
    
    steps:
      - name: Harden Runner
        uses: step-security/harden-runner@18bf8ad2ca49c14cbb28b91346d626ccfb00c518
        with:
          egress-policy: audit # TODO: change to 'egress-policy: block' after couple of runs

      - name: "Checkout code"
        uses: actions/checkout@ac593985615ec2ede58e132d2e21d2b1cbd6127c # v3.3.0
        with:
          persist-credentials: false

      - name: Debug
        run: |
          ls -la

      - name: Scorecard
        uses: testifysec/witness-run-action@fix-output
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          GITHUB_REPOSITORY_OWNER: ${{ github.repository_owner }}
          KO_DOCKER_REPO: ghcr.io/github.com/testifysec/galadriel
        with:
          enable-sigstore: true
          enable-archivista: true
          trace: true
          step: "scorecard"
          attestations: "environment git github sarif"
          command: |
            docker run -v $PWD:/repo -e ENABLE_SARIF=true -e GITHUB_AUTH_TOKEN=$GITHUB_TOKEN gcr.io/openssf/scorecard@sha256:8201c5b7706459cac1d67484dda85cb2fe7ec7492f07012c0be99c12a96f4b8e --repo=$GITHUB_REPOSITORY --show-details --policy /repo/.github/workflows/scorecard-policy.yml --format=sarif > results.sarif ; cat results.sarif ; ls -la
      - name: Debug
        run: |
          file --mime-type results.sarif
          ls -la

      # - name: "Run analysis"
      #   env:
      #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      #     ENABLE_SARIF: true
      #   run: |
      #     docker run -v $PWD/.github/workflows/scorecard-policy.yml:/scorecard-policy.yml -e ENABLE_SARIF=true -e GITHUB_AUTH_TOKEN=$GITHUB_TOKEN gcr.io/openssf/scorecard@sha256:8201c5b7706459cac1d67484dda85cb2fe7ec7492f07012c0be99c12a96f4b8e --repo=$GITHUB_REPOSITORY --show-details --policy /scorecard-policy.yml --format=sarif > results.sarif
      # - name: "Run analysis"
      #   uses: ossf/scorecard-action@e38b1902ae4f44df626f11ba0734b14fb91f8f86 # v2.1.2
      #   with:
      #     results_file: results.sarif
      #     results_format: sarif
      #     # (Optional) Read-only PAT token. Uncomment the `repo_token` line below if:
      #     # - you want to enable the Branch-Protection check on a *public* repository, or
      #     # - you are installing Scorecards on a *private* repository
      #     # To create the PAT, follow the steps in https://github.com/ossf/scorecard-action#authentication-with-pat.
      #     # repo_token: ${{ secrets.SCORECARD_READ_TOKEN }}

      #     # Publish the results for public repositories to enable scorecard badges. For more details, see
      #     # https://github.com/ossf/scorecard-action#publishing-results. 
      #     # For private repositories, `publish_results` will automatically be set to `false`, regardless 
      #     # of the value entered here.
      #     publish_results: true

      # Upload the results as artifacts (optional). Commenting out will disable uploads of run results in SARIF
      # format to the repository Actions tab.
      - name: "Upload artifact"
        uses: actions/upload-artifact@0b7f8abb1508181956e8e162db84b466c27e18ce # v3.1.2
        with:
          name: SARIF file
          path: results.sarif
          retention-days: 5
      
      # Upload the results to GitHub's code scanning dashboard.
      - name: "Upload to code-scanning"
        uses: github/codeql-action/upload-sarif@515828d97454b8354517688ddc5b48402b723750 # v2.1.38
        with:
          sarif_file: results.sarif
