server {
    # listen_address: Specifies the IP address or DNS name that the Galadriel server will bind to for accepting network connections.
    # Default: 0.0.0.0
    listen_address = "localhost"

    # listen_port: Specifies the HTTP port number that the Galadriel server will listen on for incoming connections.
    # Default: 8085.
    listen_port = "8085"

    # socket_path: Specifies the path to the UNIX Domain Socket that the Galadriel Server API will bind to for inter-process communication on the same host.
    # This setting determines where the server's socket file will be located, which is used for local communication between processes.
    # Default: /tmp/galadriel-server/api.sock.
    socket_path = "/tmp/galadriel-server/api.sock"

    # log_level: Sets the logging level <DEBUG|INFO|WARN|ERROR>. Default: INFO.
    log_level = "DEBUG"
}

providers {
    # datastore: <sqlite3|postgres>
    Datastore "sqlite3" {
        # connection_string: database connection string.
        connection_string = "./datastore.sqlite3"
    }

    #Datastore "postgres" {
    #   # connection_string: database connection string.
    #   connection_string = "postgresql://postgres:postgres@localhost:5432/galadriel"
    #}

    # X509CA "disk": Utilizes a Certificate Authority (CA) certificate, loaded from disk, to issue X509 certificates.
    X509CA "disk" {
        # key_file_path: The path to the PEM-encoded private key file of the CA.
        # This path can be relative or absolute.
        key_file_path = "./conf/server/dummy_root_ca.key"

        # cert_file_path: The path to the PEM-encoded certificate file of the CA.
        # This path can be relative or absolute.
        cert_file_path = "./conf/server/dummy_root_ca.crt"

        # bundle_file_path: Optional. Specifies the path to a file with one or more PEM-encoded certificates
        # forming an upstream chain of trust. If Galadriel is using a self-signed CA, this can be omitted.
        # However, if Galadriel uses an intermediate CA from a chain of trust that leads back to an external root CA
        # to issue certificates, this parameter should point to a file containing one or more certificates that form
        # this chain of trust. The path can be relative or absolute.
        # Note: This bundle does not need to include the root CA itself.
        # bundle_file_path = ""
    }

    # KeyManager "memory": A key manager for generating keys and signing certificates that stores keys in memory.
    KeyManager "memory" {}

    # KeyManager "disk": A key manager for generating keys that stores keys on disk.
    # KeyManager "disk" {
    #    # keys_file_path: Path to the file where the key manager will store keys.
    #    keys_file_path = "./keys.json"
    # }
}
